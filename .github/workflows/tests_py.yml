name: Build Python Wheel (Linux, macOS, Windows; AMD64)

# macos-13 is AMD64; macos-latest is ARM64

on:
  workflow_dispatch: # Allow manual execution
  push:
    tags:
      - 'v*' # Trigger on version tags

permissions:
  contents: write

jobs:
  build-libraries:
    name: Build Libraries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13, windows-latest ]
        include:
          - os: ubuntu-latest
            lib-name: libhsd.so
          - os: macos-13
            lib-name: libhsd.dylib
          - os: windows-latest
            lib-name: hsd.dll

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Build Tools (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential make gcc

      - name: Install Build Tools (macOS)
        if: matrix.os == 'macos-13'
        run: |
          xcode-select --install || echo "Xcode Command Line Tools already installed"
          brew install make gcc

      - name: Install Build Tools (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw make --no-progress -y
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Build Library
        run: make build-release
        shell: bash

      - name: Upload Library Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.lib-name }}
          path: lib/${{ matrix.lib-name }}

  build-wheel:
    name: Build Python Wheel
    needs: build-libraries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Linux Library
        uses: actions/download-artifact@v4
        with:
          name: libhsd.so
          path: bindings/python/hsdpy/

      - name: Download macOS Library
        uses: actions/download-artifact@v4
        with:
          name: libhsd.dylib
          path: bindings/python/hsdpy/

      - name: Download Windows Library
        uses: actions/download-artifact@v4
        with:
          name: hsd.dll
          path: bindings/python/hsdpy/

      - name: List Downloaded Libraries
        run: ls -la bindings/python/hsdpy/
        shell: bash

      - name: Set up Python
        run: |
          sudo apt-get update
          sudo apt-get install -y make python3-pip python3-venv
          make python-setup

      - name: Run Python Tests
        run: |
          uv build --wheel --out-dir dist
          make python-install
          make python-test
          tree

      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-wheel
          path: dist/*.whl

#  release:
#    name: Create GitHub Release
#    runs-on: ubuntu-latest
#    needs: [build-libraries, build-wheel]
#    if: startsWith(github.ref, 'refs/tags/')
#
#    steps:
#      - name: Download All Artifacts
#        uses: actions/download-artifact@v4
#        with:
#          path: ./release_assets
#
#      - name: List Downloaded Files
#        run: ls -R ./release_assets
#
#      - name: Package All Artifacts
#        run: |
#          zip -r hsdlib-complete-package.zip ./release_assets/*
#
#      - name: Create GitHub Release
#        uses: ncipollo/release-action@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          artifacts: ./hsdlib-complete-package.zip
#          tag: ${{ github.ref_name }}
#          name: Release ${{ github.ref_name }}
#          body: "Automated release build for hsdlib version ${{ github.ref_name }}. Contains shared libraries and Python wheel."
#          draft: false
#          prerelease: false